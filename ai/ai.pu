@startuml kind_of_ai
skinparam backgroundColor transparent
人工知能 <|-- ルールベース制御 
人工知能 <|-- 機械学習
機械学習 <|-- 遺伝的アルゴリズム
機械学習 <|-- サポートベクターマシン
機械学習 <|-- ニューラルネットワーク
ニューラルネットワーク <|-- パーセプトロン
ニューラルネットワーク <|-- 深層学習
深層学習<|-- CNN
深層学習<|-- RNN
@enduml


@startuml learning_procedure
start
repeat
fork
: データを取得する;
: データインジェスチョン;
: データクレンジング;
: データを学習データと評価データに分割;
fork again
: 学習モデルの作成;
end fork
: 学習データにてモデルパラメータを学習;
: 評価データにて評価;
repeat while(十分な性能だと判断)
: モデルをデプロイする;
stop
skinparam backgroundColor transparent
@enduml

@startuml decision_tree
start
:ルートノードに訓練データを入れる;
repeat
:各ノードにおいて、分割軸（特徴量）を決定する;
:各ノードにおいて、分割基準を決める;
:各ノードを基準によりツリーを複数に分ける;
:必要なノードの枝刈りをする;
repeat while(終了の判断をする)
stop
skinparam backgroundColor transparent
@enduml


@startuml random_forest 
start
:ルートノードに訓練データを入れる;
fork
: ルートのデータ群を
  ランダム抽出;
: 特徴量がランダムの
  決定木1を作成;
fork again
: ルートのデータ群を
  ランダム抽出;
: 特徴量がランダムの
  決定木2を作成;
fork again
: ルートのデータ群を
  ランダム抽出;
: 特徴量がランダムの
  決定木3を作成;
end fork
: 評価データを抽出し各ツリーに入力;
fork
: 決定木1の結果を計算;
fork again
: 決定木2の結果を計算;
fork again
: 決定木3の結果を計算;
end fork 
: 各ツリーの出力の多数決、あるいは平均値などを結果とする;
stop
skinparam backgroundColor transparent
@enduml


@startuml k_means_clustering
start
: 分割数を決定する;
: 与えられたデータにランダムにクラスを割り当てる。;
repeat
: 各クラスの代表ベクトルを、そのクラスが割り当てられたデータ群の中心（重心など）とする。;
: 各データのクラスを、各データに一番近い代表ベクトルを持つクラスとする。;
repeat while(終了の判断をする) 
stop
skinparam backgroundColor transparent
@enduml


@startuml ada_boost
start
: 全データに等しい重みを付ける。;
repeat
: 重みづけられたデータを弱い学習機によって学習する。;
: 学習後データによって予測する。;
: 重みづけエラー率eを計算する。;
: 係数αを計算する。(α= 0.5 log((1-e)/e);
: 分類器の重みを計算する。w *= e^(α(i) * 教師値 * 推測値);
: 重みをすべて足して１になるように正規化する。;
repeat while(最後の分類器に達した)
: 重みを考慮した各分類器の結果の合計が0以上か以下かで分類;
stop

skinparam backgroundColor transparent
@enduml

